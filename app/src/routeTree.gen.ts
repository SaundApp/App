/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SearchLazyImport = createFileRoute('/search')()
const NotificationsLazyImport = createFileRoute('/notifications')()
const IndexLazyImport = createFileRoute('/')()
const DmIndexLazyImport = createFileRoute('/dm/')()
const LeaderboardArtistsLazyImport = createFileRoute('/leaderboard/artists')()
const DmUsernameLazyImport = createFileRoute('/dm/$username')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()
const AccountSettingsLazyImport = createFileRoute('/account/settings')()
const AccountEditSubscriptionLazyImport = createFileRoute(
  '/account/edit-subscription',
)()
const AccountEditLazyImport = createFileRoute('/account/edit')()
const AccountUsernameLazyImport = createFileRoute('/account/$username')()

// Create/Update Routes

const SearchLazyRoute = SearchLazyImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search.lazy').then((d) => d.Route))

const NotificationsLazyRoute = NotificationsLazyImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notifications.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DmIndexLazyRoute = DmIndexLazyImport.update({
  path: '/dm/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dm/index.lazy').then((d) => d.Route))

const LeaderboardArtistsLazyRoute = LeaderboardArtistsLazyImport.update({
  path: '/leaderboard/artists',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/leaderboard/artists.lazy').then((d) => d.Route),
)

const DmUsernameLazyRoute = DmUsernameLazyImport.update({
  path: '/dm/$username',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dm/$username.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const AccountSettingsLazyRoute = AccountSettingsLazyImport.update({
  path: '/account/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/account/settings.lazy').then((d) => d.Route),
)

const AccountEditSubscriptionLazyRoute =
  AccountEditSubscriptionLazyImport.update({
    path: '/account/edit-subscription',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/account/edit-subscription.lazy').then((d) => d.Route),
  )

const AccountEditLazyRoute = AccountEditLazyImport.update({
  path: '/account/edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/account/edit.lazy').then((d) => d.Route))

const AccountUsernameLazyRoute = AccountUsernameLazyImport.update({
  path: '/account/$username',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/account/$username.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/$username': {
      id: '/account/$username'
      path: '/account/$username'
      fullPath: '/account/$username'
      preLoaderRoute: typeof AccountUsernameLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/edit': {
      id: '/account/edit'
      path: '/account/edit'
      fullPath: '/account/edit'
      preLoaderRoute: typeof AccountEditLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/edit-subscription': {
      id: '/account/edit-subscription'
      path: '/account/edit-subscription'
      fullPath: '/account/edit-subscription'
      preLoaderRoute: typeof AccountEditSubscriptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/settings': {
      id: '/account/settings'
      path: '/account/settings'
      fullPath: '/account/settings'
      preLoaderRoute: typeof AccountSettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/dm/$username': {
      id: '/dm/$username'
      path: '/dm/$username'
      fullPath: '/dm/$username'
      preLoaderRoute: typeof DmUsernameLazyImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard/artists': {
      id: '/leaderboard/artists'
      path: '/leaderboard/artists'
      fullPath: '/leaderboard/artists'
      preLoaderRoute: typeof LeaderboardArtistsLazyImport
      parentRoute: typeof rootRoute
    }
    '/dm/': {
      id: '/dm/'
      path: '/dm'
      fullPath: '/dm'
      preLoaderRoute: typeof DmIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  NotificationsLazyRoute,
  SearchLazyRoute,
  AccountUsernameLazyRoute,
  AccountEditLazyRoute,
  AccountEditSubscriptionLazyRoute,
  AccountSettingsLazyRoute,
  AuthLoginLazyRoute,
  AuthRegisterLazyRoute,
  DmUsernameLazyRoute,
  LeaderboardArtistsLazyRoute,
  DmIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/notifications",
        "/search",
        "/account/$username",
        "/account/edit",
        "/account/edit-subscription",
        "/account/settings",
        "/auth/login",
        "/auth/register",
        "/dm/$username",
        "/leaderboard/artists",
        "/dm/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/notifications": {
      "filePath": "notifications.lazy.tsx"
    },
    "/search": {
      "filePath": "search.lazy.tsx"
    },
    "/account/$username": {
      "filePath": "account/$username.lazy.tsx"
    },
    "/account/edit": {
      "filePath": "account/edit.lazy.tsx"
    },
    "/account/edit-subscription": {
      "filePath": "account/edit-subscription.lazy.tsx"
    },
    "/account/settings": {
      "filePath": "account/settings.lazy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.lazy.tsx"
    },
    "/dm/$username": {
      "filePath": "dm/$username.lazy.tsx"
    },
    "/leaderboard/artists": {
      "filePath": "leaderboard/artists.lazy.tsx"
    },
    "/dm/": {
      "filePath": "dm/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
